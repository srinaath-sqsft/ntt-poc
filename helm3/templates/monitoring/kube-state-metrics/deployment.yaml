---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/version: v1.8.0
  name: kube-state-metrics-{{ .Chart.Name }}
  namespace: {{ .Chart.Name }}-{{ .Values.username }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/version: v1.8.0
      annotations:
        co.elastic.metrics/module: prometheus
        co.elastic.metrics/metricsets: collector
        co.elastic.metrics/period: 10s
        co.elastic.metrics/hosts: '${data.host}:8080'
    spec:
      {{- template "affinity" . }}
      securityContext:
        fsGroup: 412
      containers:
      - image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.6.0
        resources:
          limits:
           cpu: 60m
           memory: 60Mi
          requests:
           cpu: 30m
           memory: 30Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        name: kube-state-metrics
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 8081
          name: telemetry
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 5
          timeoutSeconds: 5
      serviceAccountName: kube-state-metrics-{{ .Chart.Name }}
