---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: {{ .Chart.Name }}-{{ .Values.username }}
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
      annotations:
        co.elastic.metrics/module: postgresql
        co.elastic.metrics/period: 10s
        co.elastic.metrics/hosts: '${data.host}:5432?sslmode=disable'
        co.elastic.metrics/username: 'postgres'
        co.elastic.metrics/metricsets: 'activity,statement,bgwriter,database'
        co.elastic.metrics/password: 'password'
        co.elastic.logs/enabled: "true"
        co.elastic.logs/json.keys_under_root: "true"
        co.elastic.logs/processors.add_fields.target: "service"
        co.elastic.logs/processors.add_fields.fields.name: "postgres"
        eden.core_infra: "true"
    spec:
      {{- template "affinity" . }}
      imagePullSecrets:
        - name: elastic-prod-registry
      containers:
      - name: postgres
        image: docker.elastic.co/sa/{{ .Chart.Name }}-postgres-hipster:{{ .Values.es_version }}-{{ .Values.build_num }}
        command: [ "docker-entrypoint.sh", "-c", "config_file=/etc/postgresql/postgresql.conf" ]
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_PASSWORD
          value: "password"
        - name: PGDATA
          value: "postgres"
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 1
          periodSeconds: 5
        resources:
          limits:
           cpu: 500m
           memory: 500Mi
          requests:
           cpu: 5m
           memory: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: {{ .Chart.Name }}-{{ .Values.username }}
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres